# subgroup lister

def subGroup(G):
    subGroupOrders = []
    [subGroupOrders.append(h.order()) for h in G.conjugacy_classes_subgroups() if h.order() not in subGroupOrders]
    print(subGroupOrders)
    return

# Test Cases

# Permutation group on three symbols
print("Subgroups sizes of S3")
G = SymmetricGroup(3)
subGroup(G)
print("\n")

# Set of symmetries of the equilateral triangle
print("Subgroups sizes of D3")
H = DihedralGroup(3)
subGroup(H)
print("\n")

# Cyclic group of size 6
print("Subgroups sizes of Z/6Z")
I = CyclicPermutationGroup(6)
subGroup(I)
print("\n")
